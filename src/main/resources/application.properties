
spring.datasource.url   =${POSTGRES_CONNECTION_STRING}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

server.error.include-stacktrace=never
logging.level.org.springframework.web=ERROR


jwt.secret=${JWT_SECRET_BASE64}

server.port=${PORT}

## Route 1: doc-service
#spring.cloud.gateway.routes[0].id=doc-service
#spring.cloud.gateway.routes[0].uri=lb://DOC-SERVICE
#spring.cloud.gateway.routes[0].predicates[0]=Path=/documents/**
#
## Route 2: ws-service
#spring.cloud.gateway.routes[1].id=ws-service
#spring.cloud.gateway.routes[1].uri=lb://gatekeeper-default
#spring.cloud.gateway.routes[1].predicates[0]=Path=/ws/doc/**
#
#
## Discovery
#spring.cloud.discovery.enabled=true

spring.application.name=gatekeeper
ws.instance.id=${INSTANCE_NO}

# Eureka config
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
#eureka.instance.prefer-ip-address=true

# Set logging level for your packages
logging.level.com.sastudios.gatekeeper=DEBUG

# More detailed Redis logging if needed
logging.level.org.springframework.data.redis=WARN



# Astra DB Configuration
astra.application-token=${ASTRA_DB_APPLICATION_TOKEN}
astra.database.id=${ASTRA_DB_ID}
astra.database.region=${ASTRA_DB_REGION}
astra.database.keyspace=gatekeeper_ks
spring.data.cassandra.connection.bundle.path=classpath:secure-connect-gatekeeper-astra-db.zip

# Disable local Cassandra auto-configuration
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration
spring.data.cassandra.repositories.type=imperative

# Explicitly enable Cassandra
spring.data.cassandra.keyspace-name=gatekeeper_ks
spring.data.cassandra.local-datacenter=${ASTRA_DB_REGION}

spring.data.cassandra.naming-strategy=org.springframework.data.cassandra.core.mapping.NamingStrategy$SNAKE_CASE

cassandra.username=GSvladonHCtxsqdJWmbmTfBL
cassandra.password=Z6Q8Pw5ltN7C+ObkIps9YITulG12J+r+YUpOXnnj2WgA150y.7sXdQtAKQvQqSMnWIEC_gZOkD1IJbfdpf.uP.COSyN_pGrr+TkxQqZclF-x1K06fPd0q-witM8vmJbZ
cassandra.keyspace=gatekeeper_ks




spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=ws-group
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*


aws.accessKeyId= ${AWS_ACCESS_KEY_ID}
aws.secretAccessKey= ${AWS_SECRET_ACCESS_KEY}
aws.s3.bucket= ${AWS_BUCKET_NAME}


spring.devtools.restart.enabled=false
